{"version":3,"file":"npm.react-sortablejs.f5fd82e45e7aac71d7b8.js","mappings":"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","sources":["webpack://asset-exit-strategies/./node_modules/react-sortablejs/dist/index.js"],"sourcesContent":["var $8zHUo$sortablejs = require(\"sortablejs\");\nvar $8zHUo$classnames = require(\"classnames\");\nvar $8zHUo$react = require(\"react\");\nvar $8zHUo$tinyinvariant = require(\"tiny-invariant\");\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\n\n$parcel$export(module.exports, \"Sortable\", () => $882b6d93070905b3$re_export$Sortable);\n$parcel$export(module.exports, \"Direction\", () => $882b6d93070905b3$re_export$Direction);\n$parcel$export(module.exports, \"DOMRect\", () => $882b6d93070905b3$re_export$DOMRect);\n$parcel$export(module.exports, \"GroupOptions\", () => $882b6d93070905b3$re_export$GroupOptions);\n$parcel$export(module.exports, \"MoveEvent\", () => $882b6d93070905b3$re_export$MoveEvent);\n$parcel$export(module.exports, \"Options\", () => $882b6d93070905b3$re_export$Options);\n$parcel$export(module.exports, \"PullResult\", () => $882b6d93070905b3$re_export$PullResult);\n$parcel$export(module.exports, \"PutResult\", () => $882b6d93070905b3$re_export$PutResult);\n$parcel$export(module.exports, \"SortableEvent\", () => $882b6d93070905b3$re_export$SortableEvent);\n$parcel$export(module.exports, \"SortableOptions\", () => $882b6d93070905b3$re_export$SortableOptions);\n$parcel$export(module.exports, \"Utils\", () => $882b6d93070905b3$re_export$Utils);\n$parcel$export(module.exports, \"ReactSortable\", () => $7fe8e3ea572bda7a$export$11bbed9ee0012c13);\n\n\n\n\n\nfunction $eb03e74f8f7db1f3$export$1d0aa160432dfea5(node) {\n    if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\nfunction $eb03e74f8f7db1f3$export$6d240faa51aa562f(parent, newChild, index) {\n    const refChild = parent.children[index] || null;\n    parent.insertBefore(newChild, refChild);\n}\nfunction $eb03e74f8f7db1f3$export$d7d742816c28cf91(customs) {\n    $eb03e74f8f7db1f3$export$77f49a256021c8de(customs);\n    $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs);\n}\nfunction $eb03e74f8f7db1f3$export$77f49a256021c8de(customs) {\n    customs.forEach((curr)=>$eb03e74f8f7db1f3$export$1d0aa160432dfea5(curr.element));\n}\nfunction $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs) {\n    customs.forEach((curr)=>{\n        $eb03e74f8f7db1f3$export$6d240faa51aa562f(curr.parentElement, curr.element, curr.oldIndex);\n    });\n}\nfunction $eb03e74f8f7db1f3$export$4655efe700f887a(evt, list) {\n    const mode = $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt);\n    const parentElement = {\n        parentElement: evt.from\n    };\n    let custom = [];\n    switch(mode){\n        case \"normal\":\n            /* eslint-disable */ const item = {\n                element: evt.item,\n                newIndex: evt.newIndex,\n                oldIndex: evt.oldIndex,\n                parentElement: evt.from\n            };\n            custom = [\n                item\n            ];\n            break;\n        case \"swap\":\n            const drag = {\n                element: evt.item,\n                oldIndex: evt.oldIndex,\n                newIndex: evt.newIndex,\n                ...parentElement\n            };\n            const swap = {\n                element: evt.swapItem,\n                oldIndex: evt.newIndex,\n                newIndex: evt.oldIndex,\n                ...parentElement\n            };\n            custom = [\n                drag,\n                swap\n            ];\n            break;\n        case \"multidrag\":\n            custom = evt.oldIndicies.map((curr, index)=>({\n                    element: curr.multiDragElement,\n                    oldIndex: curr.index,\n                    newIndex: evt.newIndicies[index].index,\n                    ...parentElement\n                }));\n            break;\n    }\n    /* eslint-enable */ const customs = $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(custom, list);\n    return customs;\n}\nfunction $eb03e74f8f7db1f3$export$c25cf8080bd305ec(normalized, list) {\n    const a = $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list);\n    const b = $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, a);\n    return b;\n}\nfunction $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list) {\n    const newList = [\n        ...list\n    ];\n    normalized.concat().reverse().forEach((curr)=>newList.splice(curr.oldIndex, 1));\n    return newList;\n}\nfunction $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, list, evt, clone) {\n    const newList = [\n        ...list\n    ];\n    normalized.forEach((curr)=>{\n        const newItem = clone && evt && clone(curr.item, evt);\n        newList.splice(curr.newIndex, 0, newItem || curr.item);\n    });\n    return newList;\n}\nfunction $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt) {\n    if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n    if (evt.swapItem) return \"swap\";\n    return \"normal\";\n}\nfunction $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(inputs, list) {\n    const normalized = inputs.map((curr)=>({\n            ...curr,\n            item: list[curr.oldIndex]\n        })).sort((a, b)=>a.oldIndex - b.oldIndex);\n    return normalized;\n}\nfunction $eb03e74f8f7db1f3$export$7553c81e62e31b7e(props) {\n    /* eslint-disable */ const { list: // react sortable props\n    list , setList: setList , children: children , tag: tag , style: style , className: className , clone: clone , onAdd: // sortable options that have methods we want to overwrite\n    onAdd , onChange: onChange , onChoose: onChoose , onClone: onClone , onEnd: onEnd , onFilter: onFilter , onRemove: onRemove , onSort: onSort , onStart: onStart , onUnchoose: onUnchoose , onUpdate: onUpdate , onMove: onMove , onSpill: onSpill , onSelect: onSelect , onDeselect: onDeselect , ...options } = props;\n    /* eslint-enable */ return options;\n}\n\n\n/** Holds a global reference for which react element is being dragged */ // @todo - use context to manage this. How does one use 2 different providers?\nconst $7fe8e3ea572bda7a$var$store = {\n    dragging: null\n};\nclass $7fe8e3ea572bda7a$export$11bbed9ee0012c13 extends (0, $8zHUo$react.Component) {\n    /* eslint-disable-next-line */ static defaultProps = {\n        clone: (item)=>item\n    };\n    constructor(props){\n        super(props);\n        // @todo forward ref this component\n        this.ref = /*#__PURE__*/ (0, $8zHUo$react.createRef)();\n        // make all state false because we can't change sortable unless a mouse gesture is made.\n        const newList = [\n            ...props.list\n        ].map((item)=>Object.assign(item, {\n                chosen: false,\n                selected: false\n            }));\n        props.setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n        (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(//@ts-expect-error: Doesn't exist. Will deprecate soon.\n        !props.plugins, `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `);\n    }\n    componentDidMount() {\n        if (this.ref.current === null) return;\n        const newOptions = this.makeOptions();\n        (0, ($parcel$interopDefault($8zHUo$sortablejs))).create(this.ref.current, newOptions);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.disabled !== this.props.disabled && this.sortable) this.sortable.option(\"disabled\", this.props.disabled);\n    }\n    render() {\n        const { tag: tag , style: style , className: className , id: id  } = this.props;\n        const classicProps = {\n            style: style,\n            className: className,\n            id: id\n        };\n        // if no tag, default to a `div` element.\n        const newTag = !tag || tag === null ? \"div\" : tag;\n        return /*#__PURE__*/ (0, $8zHUo$react.createElement)(newTag, {\n            // @todo - find a way (perhaps with the callback) to allow AntD components to work\n            ref: this.ref,\n            ...classicProps\n        }, this.getChildren());\n    }\n    getChildren() {\n        const { children: children , dataIdAttr: dataIdAttr , selectedClass: selectedClass = \"sortable-selected\" , chosenClass: chosenClass = \"sortable-chosen\" , dragClass: /* eslint-disable */ dragClass = \"sortable-drag\" , fallbackClass: fallbackClass = \"sortable-falback\" , ghostClass: ghostClass = \"sortable-ghost\" , swapClass: swapClass = \"sortable-swap-highlight\" , filter: /* eslint-enable */ filter = \"sortable-filter\" , list: list ,  } = this.props;\n        // if no children, don't do anything.\n        if (!children || children == null) return null;\n        const dataid = dataIdAttr || \"data-id\";\n        /* eslint-disable-next-line */ return (0, $8zHUo$react.Children).map(children, (child, index)=>{\n            if (child === undefined) return undefined;\n            const item = list[index] || {};\n            const { className: prevClassName  } = child.props;\n            // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n            const filtered = typeof filter === \"string\" && {\n                [filter.replace(\".\", \"\")]: !!item.filtered\n            };\n            const className = (0, ($parcel$interopDefault($8zHUo$classnames)))(prevClassName, {\n                [selectedClass]: item.selected,\n                [chosenClass]: item.chosen,\n                ...filtered\n            });\n            return /*#__PURE__*/ (0, $8zHUo$react.cloneElement)(child, {\n                [dataid]: child.key,\n                className: className\n            });\n        });\n    }\n    /** Appends the `sortable` property to this component */ get sortable() {\n        const el = this.ref.current;\n        if (el === null) return null;\n        const key = Object.keys(el).find((k)=>k.includes(\"Sortable\"));\n        if (!key) return null;\n        //@ts-expect-error: fix me.\n        return el[key];\n    }\n    /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */ makeOptions() {\n        const DOMHandlers = [\n            \"onAdd\",\n            \"onChoose\",\n            \"onDeselect\",\n            \"onEnd\",\n            \"onRemove\",\n            \"onSelect\",\n            \"onSpill\",\n            \"onStart\",\n            \"onUnchoose\",\n            \"onUpdate\", \n        ];\n        const NonDOMHandlers = [\n            \"onChange\",\n            \"onClone\",\n            \"onFilter\",\n            \"onSort\", \n        ];\n        const newOptions = (0, $eb03e74f8f7db1f3$export$7553c81e62e31b7e)(this.props);\n        DOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerPropAndDOM(name));\n        NonDOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerProp(name));\n        /** onMove has 2 arguments and needs to be handled seperately. */ const onMove1 = (evt, originalEvt)=>{\n            const { onMove: onMove  } = this.props;\n            const defaultValue = evt.willInsertAfter || -1;\n            if (!onMove) return defaultValue;\n            const result = onMove(evt, originalEvt, this.sortable, $7fe8e3ea572bda7a$var$store);\n            if (typeof result === \"undefined\") return false;\n            return result;\n        };\n        return {\n            ...newOptions,\n            onMove: onMove1\n        };\n    }\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */ prepareOnHandlerPropAndDOM(evtName) {\n        return (evt)=>{\n            // call the component prop\n            this.callOnHandlerProp(evt, evtName);\n            // calls state change\n            //@ts-expect-error: until @types multidrag item is in\n            this[evtName](evt);\n        };\n    }\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */ prepareOnHandlerProp(evtName) {\n        return (evt)=>{\n            // call the component prop\n            this.callOnHandlerProp(evt, evtName);\n        };\n    }\n    /** Calls the `props.on[Handler]` function */ callOnHandlerProp(evt, evtName) {\n        const propEvent = this.props[evtName];\n        if (propEvent) propEvent(evt, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    // SORTABLE DOM HANDLING\n    onAdd(evt) {\n        const { list: list , setList: setList , clone: clone  } = this.props;\n        /* eslint-disable-next-line */ const otherList = [\n            ...$7fe8e3ea572bda7a$var$store.dragging.props.list\n        ];\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, otherList);\n        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);\n        const newList = (0, $eb03e74f8f7db1f3$export$eca851ee65ae17e4)(customs, list, evt, clone).map((item)=>Object.assign(item, {\n                selected: false\n            }));\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onRemove(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const mode = (0, $eb03e74f8f7db1f3$export$1fc0f6205829e19c)(evt);\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);\n        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);\n        let newList = [\n            ...list\n        ];\n        // remove state if not in clone mode. otherwise, keep.\n        if (evt.pullMode !== \"clone\") newList = (0, $eb03e74f8f7db1f3$export$be2da95e6167b0bd)(customs, newList);\n        else {\n            // switch used to get the clone\n            let customClones = customs;\n            switch(mode){\n                case \"multidrag\":\n                    customClones = customs.map((item, index)=>({\n                            ...item,\n                            element: evt.clones[index]\n                        }));\n                    break;\n                case \"normal\":\n                    customClones = customs.map((item)=>({\n                            ...item,\n                            element: evt.clone\n                        }));\n                    break;\n                case \"swap\":\n                default:\n                    (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(true, `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`);\n            }\n            (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customClones);\n            // replace selected items with cloned items\n            customs.forEach((curr)=>{\n                const index = curr.oldIndex;\n                /* eslint-disable-next-line */ const newItem = this.props.clone(curr.item, evt);\n                newList.splice(index, 1, newItem);\n            });\n        }\n        // remove item.selected from list\n        newList = newList.map((item)=>Object.assign(item, {\n                selected: false\n            }));\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onUpdate(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);\n        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);\n        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);\n        const newList = (0, $eb03e74f8f7db1f3$export$c25cf8080bd305ec)(customs, list);\n        return setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onStart() {\n        $7fe8e3ea572bda7a$var$store.dragging = this;\n    }\n    onEnd() {\n        $7fe8e3ea572bda7a$var$store.dragging = null;\n    }\n    onChoose(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const newList = list.map((item, index)=>{\n            let newItem = item;\n            if (index === evt.oldIndex) newItem = Object.assign(item, {\n                chosen: true\n            });\n            return newItem;\n        });\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onUnchoose(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const newList = list.map((item, index)=>{\n            let newItem = item;\n            if (index === evt.oldIndex) newItem = Object.assign(newItem, {\n                chosen: false\n            });\n            return newItem;\n        });\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onSpill(evt) {\n        const { removeOnSpill: removeOnSpill , revertOnSpill: revertOnSpill  } = this.props;\n        if (removeOnSpill && !revertOnSpill) (0, $eb03e74f8f7db1f3$export$1d0aa160432dfea5)(evt.item);\n    }\n    onSelect(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const newList = list.map((item)=>Object.assign(item, {\n                selected: false\n            }));\n        evt.newIndicies.forEach((curr)=>{\n            const index = curr.index;\n            if (index === -1) {\n                console.log(`\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`);\n                console.log(evt);\n                return;\n            }\n            newList[index].selected = true;\n        });\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n    onDeselect(evt) {\n        const { list: list , setList: setList  } = this.props;\n        const newList = list.map((item)=>Object.assign(item, {\n                selected: false\n            }));\n        evt.newIndicies.forEach((curr)=>{\n            const index = curr.index;\n            if (index === -1) return;\n            newList[index].selected = true;\n        });\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\n    }\n}\n\n\nvar $faefaad95e5fcca0$exports = {};\n\n\n$parcel$exportWildcard(module.exports, $faefaad95e5fcca0$exports);\n\n\n//# sourceMappingURL=index.js.map\n"],"names":["$8zHUo$sortablejs","$8zHUo$classnames","$8zHUo$react","$8zHUo$tinyinvariant","$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$eb03e74f8f7db1f3$export$1d0aa160432dfea5","node","parentElement","removeChild","$eb03e74f8f7db1f3$export$77f49a256021c8de","customs","forEach","curr","element","$eb03e74f8f7db1f3$export$a6177d5829f70ebc","parent","newChild","index","refChild","children","insertBefore","$eb03e74f8f7db1f3$export$6d240faa51aa562f","oldIndex","$eb03e74f8f7db1f3$export$4655efe700f887a","evt","list","mode","$eb03e74f8f7db1f3$export$1fc0f6205829e19c","from","custom","item","newIndex","swapItem","oldIndicies","map","multiDragElement","newIndicies","inputs","sort","b","$eb03e74f8f7db1f3$export$bc06a3af7dc65f53","$eb03e74f8f7db1f3$export$be2da95e6167b0bd","normalized","newList","concat","reverse","splice","$eb03e74f8f7db1f3$export$eca851ee65ae17e4","clone","newItem","length","module","exports","$882b6d93070905b3$re_export$Sortable","$882b6d93070905b3$re_export$Direction","$882b6d93070905b3$re_export$DOMRect","$882b6d93070905b3$re_export$GroupOptions","$882b6d93070905b3$re_export$MoveEvent","$882b6d93070905b3$re_export$Options","$882b6d93070905b3$re_export$PullResult","$882b6d93070905b3$re_export$PutResult","$882b6d93070905b3$re_export$SortableEvent","$882b6d93070905b3$re_export$SortableOptions","$882b6d93070905b3$re_export$Utils","$7fe8e3ea572bda7a$export$11bbed9ee0012c13","$7fe8e3ea572bda7a$var$store","dragging","Component","static","constructor","props","super","this","ref","createRef","assign","chosen","selected","setList","sortable","plugins","componentDidMount","current","newOptions","makeOptions","create","componentDidUpdate","prevProps","disabled","option","render","tag","style","className","id","classicProps","newTag","createElement","getChildren","dataIdAttr","selectedClass","chosenClass","dragClass","fallbackClass","ghostClass","swapClass","filter","dataid","Children","child","undefined","prevClassName","filtered","replace","cloneElement","key","el","keys","find","k","includes","onAdd","onChange","onChoose","onClone","onEnd","onFilter","onRemove","onSort","onStart","onUnchoose","onUpdate","onMove","onSpill","onSelect","onDeselect","options","name","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","originalEvt","defaultValue","willInsertAfter","result","evtName","callOnHandlerProp","propEvent","pullMode","customClones","clones","removeOnSpill","revertOnSpill","console","log","type","dest","source","hasOwnProperty"],"sourceRoot":""}