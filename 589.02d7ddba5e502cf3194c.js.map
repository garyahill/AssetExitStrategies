{"version":3,"file":"589.02d7ddba5e502cf3194c.js","mappings":"wNAIA,MAcA,EAd2B,IAEzB,uBAAKA,UAAU,uBACd,yB,qDAEO,sC,yCAEP,uBAAKA,UAAU,mBACd,uBAAKC,IAAK,IAAMC,IAAI,WCexB,EAlB4C,EAAGC,QAAOC,iBAGpD,uBAAKJ,UAAU,wBACd,uBAAKA,UAAU,aAAaK,QAASD,GACpC,2BAAMD,EAAMG,WACZ,uBAAKN,UAAU,mBAAiB,MAChC,uBAAKA,UAAU,WACb,aAAaG,EAAMI,YAErB,uBAAKP,UAAU,WACb,GAAGG,EAAMK,YAAYC,kB,cCT3B,MAqDA,EArDa,KACZ,MAAM,QAAEC,EAAO,OAAEC,EAAM,aAAEC,IAAiB,EAAAC,EAAA,MACpC,kBAAEC,IAAsB,EAAAC,EAAA,MACxB,SAAEC,EAAQ,YAAEC,IAAgB,EAAAC,EAAA,KAC5BC,EAA6B,IAAlBR,EAAOF,OAuBxB,OACC,uBAAKT,UAAU,kBACd,0BAAK,WAAWU,EAAQU,QACvBD,EACA,gBAAC,EAAQ,MAET,gCACC,uBAAKnB,UAAU,mBACd,yCACA,uBAAKA,UAAU,kBACd,gBAAC,IAAW,CAACqB,YA/BF,4GAkCb,gBAAC,EAAAC,cAAa,CAACC,KAAMZ,EAAQa,QAtBLC,IAE3B,MAAMC,EAAgBD,EAAUE,KAAI,CAACxB,EAAOyB,IAAW,OAAD,wBAClDzB,GAAK,CACR0B,UAAWD,EAAQ,MAEpBhB,EAAac,EAAc,EAgBkC1B,UAAU,oBAClEW,EAAOgB,KAAKxB,GACZ,uBAAK2B,IAAK3B,EAAM4B,IACf,gBAAC,EAAS,CAAC5B,MAAOA,EAAOC,YAAa,IAlCrB,CAACD,IACxBc,EAAY,OAAD,wBACPD,GAAQ,CACXgB,oBAAqB7B,EACrB8B,sBAAkBC,KAEnBpB,GAAmB,EA4B+BqB,CAAgBhC,UAOlE,C","sources":["webpack://asset-exit-strategies/./src/pages/main/components/noAssets.tsx","webpack://asset-exit-strategies/./src/pages/main/components/assetCard.tsx","webpack://asset-exit-strategies/./src/pages/main/main.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport bull from \"../../../images/Bull.png\";\r\nimport \"./noAssets.less\";\r\n\r\nconst NoAssets: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"no-assets-container\">\r\n\t\t\t<p>\r\n\t\t\t\tYou currently have no scenarios to display.\r\n\t\t\t\tClick <b>Add Asset</b> to create a new Asset Exit Strategy.\r\n\t\t\t</p>\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<img src={bull} alt=\"Bull\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NoAssets;\r\n","import React from \"react\";\r\nimport { Asset } from \"../../../models\";\r\nimport \"./assetCard.less\";\r\n\r\ninterface AssetCardProps {\r\n\tasset: Asset;\r\n\tonCardClick: () => void;\r\n}\r\n\r\nconst AssetCard: React.FC<AssetCardProps> = ({ asset, onCardClick }): JSX.Element => {\r\n\r\n\treturn (\r\n\t\t<div className=\"asset-card-container\">\r\n\t\t\t<div className=\"asset-card\" onClick={onCardClick}>\r\n\t\t\t\t<div>{asset.AssetName}</div>\r\n\t\t\t\t<div className=\"chart-container\">ðŸ“ˆ</div>\r\n\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t{`Quantity: ${asset.Quantity}`}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t{`${asset.PriceLevels.length} Exits`}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AssetCard;","import React from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport useUserData from \"../../hooks/useUserData\";\r\nimport useNavigation from \"../../hooks/useNavigation\";\r\nimport useAppState from \"../../hooks/useAppState\";\r\nimport NoAssets from \"./components/noAssets\";\r\nimport AssetCard from \"./components/assetCard\";\r\nimport InfoTooltip from \"../../components/controls/infoTooltip\";\r\nimport { Asset } from \"../../models\";\r\nimport \"./main.less\";\r\n\r\nconst Main = () => {\r\n\tconst { profile, assets, updateAssets } = useUserData();\r\n\tconst { navigateToDisplay } = useNavigation();\r\n\tconst { appState, setAppState } = useAppState();\r\n\tconst noAssets = assets.length === 0;\r\n\r\n\tconst infoText = `Select an asset to display your exit strategy or \r\n    drag and drop items to rearrange asset layout.`;\r\n\r\n\tconst handleItemClick = (asset: Asset) => {\r\n\t\tsetAppState({\r\n\t\t\t...appState,\r\n\t\t\tassetBeingDisplayed: asset,\r\n\t\t\tassetBeingEdited: undefined,\r\n\t\t});\r\n\t\tnavigateToDisplay();\r\n\t};\r\n\r\n\tconst handleUpdateAssets = (newAssets: Asset[]) => {\r\n\t\t// Update SortOrder after drag-and-drop\r\n\t\tconst updatedAssets = newAssets.map((asset, index) => ({\r\n\t\t\t...asset,\r\n\t\t\tSortOrder: index + 1,\r\n\t\t}));\r\n\t\tupdateAssets(updatedAssets);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"main-container\">\r\n\t\t\t<h2>{`Welcome ${profile.Name}`}</h2>\r\n\t\t\t{noAssets ? (\r\n\t\t\t\t<NoAssets />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"title-container\">\r\n\t\t\t\t\t\t<h4>Your Assets</h4>\r\n\t\t\t\t\t\t<div className=\"info-container\">\r\n\t\t\t\t\t\t\t<InfoTooltip tooltipText={infoText} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ReactSortable list={assets} setList={handleUpdateAssets} className=\"assets-container\">\r\n\t\t\t\t\t\t{assets.map((asset) => (\r\n\t\t\t\t\t\t\t<div key={asset.id}>\r\n\t\t\t\t\t\t\t\t<AssetCard asset={asset} onCardClick={() => handleItemClick(asset)} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ReactSortable>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n"],"names":["className","src","alt","asset","onCardClick","onClick","AssetName","Quantity","PriceLevels","length","profile","assets","updateAssets","useUserData","navigateToDisplay","useNavigation","appState","setAppState","useAppState","noAssets","Name","tooltipText","ReactSortable","list","setList","newAssets","updatedAssets","map","index","SortOrder","key","id","assetBeingDisplayed","assetBeingEdited","undefined","handleItemClick"],"sourceRoot":""}